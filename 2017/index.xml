<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2017s on CP0000 - 一只特立独行的猪</title>
    <link>https://cp0000.github.io/2017/</link>
    <description>Recent content in 2017s on CP0000 - 一只特立独行的猪</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 03 Dec 2017 12:58:39 +0000</lastBuildDate><atom:link href="https://cp0000.github.io/2017/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>我的2017</title>
      <link>https://cp0000.github.io/2017/12/03/my-2017/</link>
      <pubDate>Sun, 03 Dec 2017 12:58:39 +0000</pubDate>
      
      <guid>https://cp0000.github.io/2017/12/03/my-2017/</guid>
      <description>2017年还剩一个月，这一年马上就要走完。年初的计划如果此时还没有开始做，想必也来不及在2017去完成了。所以在12月的开头，总结一下这一年发生的事情，想想其实也不算太早。
Life is Short “时间真的过得太快了“，是人们在年尾回顾一年所作所为时最常感叹的一句陈词滥调。其实，每个人都知道时间流逝，人生苦短。不过仔细想想，当我们在抱怨时间过得太快的时候，是真的在抱怨时间流逝嘛？还是在为自己这一年来碌碌无为，浑浑噩噩所苦恼？Paul Graham在他的博客里提出一个很有意思的假设： 假如我们人类的寿命是现在的10倍，那我们还会感叹人生苦短么？这个假设目前无从验证，但如果感叹人生苦短的本质是苦恼于自己的碌碌无为，那我们应该还是会感叹时间飞逝，即便我们能活800年。
一个可以稍微减轻life is short的解法是不要等待，想到了就去做。诸如明天再进行体育锻炼，下个礼拜再给父母打电话，下个月再开始学习新技术，明年再思考自己到底想做什么等等这些需要以后再去做的事情，最好能当下处理掉。我们不应该感叹于时光飞逝，自己却什么都没做；而应该满足于逝去的时间我都在做我想做，喜欢做的事情上。感叹于物理现象是没有意义的。
出行 2017年我去了美国和澳大利亚。年初的时候是没计划今年会去澳大利亚和美国。去澳大利亚是在五月份，主要目的是旅游。那次出行，我们住在墨尔本城市里面，主要是在维多利亚州活动。维多利亚州到处都是平坦辽阔的草原，上面牛羊成群，真的是一块完美的畜牧地。旅行中见到了小企鹅，树懒，美丽的澳洲风光，可就是没看到袋鼠。墨尔本这座城市也让人很喜欢，虽说澳洲是个移民国家，没什么历史，但墨尔本给人感觉是一座很有历史感的城市。它不是很大，但很美，还有一种莫名其妙的不知道从哪里来的亲切感。在城市广场附近，我远远的看到了澳网球场，作为一个德约科维奇的球迷，没能参观他最为成功的一块球场，略微有点遗憾。相比于墨尔本，黄金海岸给我的感觉是个典型的旅游海岛型城市，坐直升飞机俯览整个黄金海岸，真的很美。行程中，我不止一次的羡慕这块土地的人们，他们的地理环境比起我们中国真的好太多。
去美国是在8月下旬的时候，原因是公司和苹果合作参与iPhone X的新特性封闭开发。凭借着自己三脚猫的英语口语，过了美国海关，搭上出租车来到圣何塞的库比蒂诺和同事汇合。硅谷整体给人的观感是一个大农村，公共交通设施很差，物价很高。天气也比较干旱，一开始会不太喜欢那里的天气，但呆久了就觉得还挺好。硅谷的建筑都不高，一般都是四五层楼，不像国内的办公楼动辄二三十层。那是段很有意思的经历。
一些推荐 ###书 17年还是读了一些蛮有意思的书，其中人物传记比较多，有
《鞋狗》 《硅谷钢铁侠：埃隆马斯克的冒险人生》 《成为乔布斯》 《曾国藩家书》 《毛泽东传》 其他的书
《死之枝》 《独裁者手册》 《拆掉思维里的墙-原来我还可以这样活》 《平凡的世界》 播客 播客听的比较多是跟李如一先生或多或少有关系的一些博客, 推荐的有：《一天世界》，《灭茶苦茶》，《博物志》，《硬影像》，《太医来了》，《声东击西》，《迟早更新》，《简单心理》
影视 电影《赴汤蹈火》，《爱乐之城》不错；美剧《Better Call Saul》，《Mr. Robot》，《GOT》都不错。
以上。</description>
    </item>
    
    <item>
      <title>活到29</title>
      <link>https://cp0000.github.io/2017/10/29/29/</link>
      <pubDate>Sun, 29 Oct 2017 22:56:05 +0000</pubDate>
      
      <guid>https://cp0000.github.io/2017/10/29/29/</guid>
      <description>“婚姻是一座围城，城外的人想进去，城里的人想出来.” &amp;ndash; 钱钟书 《围城》
我还没有结婚，所以也无从体验婚姻是否真如钱先生所说的那样，是一座围城。倒是这世上许许多多的事情，还真如这句话所言，城外的人想进去，城里的人想出来。前阵子看到一篇文章，讲的是在美国硅谷生活工作的35岁左右男性面临的职业危机，或者说是两难吧。要么继续呆在美国，但职业天花板明摆在那里，生活也是一眼到头。选择回国，会有更具吸引力的薪资，权利，机会，但年轻的时候拼了命来美国是否又变得没有意义；而且老婆孩子还得继续留在美国，自己异地工作，没法照顾家庭，夫妻，父子关系会否变得浅薄起来。总之就是对现状无法感到满意，着急改变。这应该是一个很典型的围城思维。就像国内的程序员会觉得能去美国硅谷的大公司，如Google,Apple,Facebook工作才算是真正成功的程序员。不但可以肉身翻墙，赚取美金，还可以享受“民主与自由”。但身处美利坚的同志们可能也有自己的烦恼，比如如上文案例所讲的，事业发展有瓶颈，机会不如在国内多，父母亲留在国内，没法照顾，等诸如此类的。
的确，我们成长的过程中，总是在经历着各种各样的围城事件。去大城市打拼的人觉得工作生活压力太大，留在小城市安逸舒服，反之小城市的人觉得大城市繁华，机会多，挣钱多。搞计算机的觉得其他行当的人没这么累，其他行当的人觉得这几年搞计算机的人挣得多。呆在大公司上班的人觉得自己创业的人酷，什么都自己说的算，创业的人却在抱怨投资人像祖宗一样难搞，自己每天都在透支着自己的身体，还是留在大公司打一份工，省心。总之，诸如此类，不甚枚举。每个人在某个阶段都会有围城思维，我经历过，其他人肯定也经历过。
程序员对解决问题这件事情有着近乎偏执的爱好，行文到这里，该是到写如何破解围城思维的时候了。但有些事情就像今年奥斯卡最佳男主角所演的《海边的曼彻斯特》这部电影中表述的故事一样，注定是没有答案，无从解决的。围城就是在那里，每个人在生命的各个阶段都得面对自己的围城，是进去，还是出来，亦或是出来后再进去，只能全凭自己的判断。运气好的，生活继续，吃饱睡足，心满意足；运气不好的，只能怪自己为何出城，老实呆着不好嘛之类的。
活到二十九，而立之年。今年的生日过的分外没劲，可能日子就是这样，年纪越大越觉得过生日是一种折磨。时间流逝，所谓理想，爱好都会随之消散，到最后只剩下买房，结婚生子，赡养老人等社会责任让你继续上路，不至于垮掉。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://cp0000.github.io/2017/01/29/becoming-steve-jobs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cp0000.github.io/2017/01/29/becoming-steve-jobs/</guid>
      <description>title: 读书笔记《成为乔布斯》 categories: Reading notes author: cp date: 2017-01-29 15:54:14 tags: 在接触《成为乔布斯》这本乔布斯人生旅程传记之前，我试过两三次去读官方那本《乔布斯传》，结果都以失败告终；因为《乔布斯传》这本书的内容太过干巴巴，读起来很容易走神。而《成为乔布斯》则不一样，这书是以故事的方式讲述了乔布斯的生平事迹，读起来有趣的多。
其中该书最让我喜欢的地方是，书中讲述了很多我们以前不知道的小细节，小故事。如iTunes是先于iPod就出现的；在2007年第一代iPhone发布之前，乔布斯已经得知自己的癌细胞扩散了，留给他的时间只有五年左右（但我们回头看他在发布会上面的表现，不像是一个知道自己只剩四五年时间的人）。例如iPad这个产品是先于iPhone就出现在了苹果公司中，只不过那时候的iPad和最后上市的iPad是不一样的。还比如库克在乔布斯病危的时候想捐献肝脏给他这一让人感动的场景。
全书主要讲述的是乔布斯从早期和沃滋一起创业，研发个人电脑，到苹果电脑大卖，公司上市；从和沃滋的关系决裂，到Lisa等一系列产品的失败，再到被苹果公司驱逐。从受到Next，打算凭借Next击败评估，到收购皮克斯，并见证了皮克斯生产了动画电影史上重要篇章《玩具总动员》。后来Next被苹果收购，乔布斯回归苹果，收拾其他人留下来的烂摊子。上面的故事离我们比较远，但乔布斯回归苹果之后，也不是立马就做出了具有历史意义的iPhone。回归苹果之后的乔布斯，可以从书中得知，主要的业务还是个人电脑。但乔布斯对事物的敏感度，让他在2000年的时候觉得消费电子领域是一个很有市场的领域。随后苹果公司发布了iTunes，让用户在iTunes上面购买正版音乐。也标志着苹果公司正式进入了个人电子消费市场。后面的故事就是你我比较熟悉的了，iPod让苹果公司great again，苹果公司又成了大众喜欢并愿意花钱消费其产品的公司。然后就是2007年的iPhone一代的发布，真正一款划时代的产品。书中说到这是让乔布斯理想实现的一款产品，因为iPod，iPhone让苹果公司生产的产品不再是一小撮人玩弄的小众产品，而是被大众接受，喜爱，并购买的消费电子产品。而iPhone整个设计上面的美学，在我看来也让整个大众的审美得到了提升。回头看看在iPhone普及之后，我们的电子产品，网站界面，甚至包括家具，汽车等产品的工业设计都受到了苹果产品传达出来的美学影响。苹果的产品真的让生活变得美好了起来。
最后，书名叫《成为乔布斯》，意思不是教大家如何变成乔布斯，而是讲述了乔布斯是如何一步一步成长成为那个被世人奉若神明的史蒂芬。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://cp0000.github.io/2017/02/26/glsl-dictionary/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cp0000.github.io/2017/02/26/glsl-dictionary/</guid>
      <description>title: Learning OpenGL：GLSL Shader 手册 date: 2017-02-26 14:26:08 categories: Tech author: cp tags: 基本类型 类型 说明 void 空类型 bool 布尔类型 int 带符号的整数 signed integer float 带符号的浮点数 floating scalar vec2,vec3,vec4 n维浮点数向量 n-component floating point vector bvec2,bvec3,bvec4 n维整数向量 singed integer vector bvec2,bvec3,bvec4 n维布尔向量 boolean vector ivec2,ivec3,ivec4 n维整数向量 singed integer vector mat2,mat3,mat4 2X2,3X3,4X4 浮点数矩阵 float matrix sampler2D 2D 纹理 a 2D texture samplerCube 盒纹理 cube mapped texture 基本结构和数组 类型 说明 结构 struct type-name{} 类似c语言中的结构体 数组 float foo3[] glsl 只支持1维数组，数组可以是结构体的成员 ##内置的特殊变量</description>
    </item>
    
    <item>
      <title></title>
      <link>https://cp0000.github.io/2017/03/19/ffmpeg-command-example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cp0000.github.io/2017/03/19/ffmpeg-command-example/</guid>
      <description>title: ffmpeg 使用例程 date: 2016-11-07 21:03:47 author: cp categories: Tech tags: 本文介绍ffmpeg命令行的一些使用方法；
参数 主要参数 -i——设置输入档名。 -f——设置输出格式。 -y——若输出文件已存在时则覆盖文件。 -fs——超过指定的文件大小时则结束转换。 -ss——从指定时间开始转换。 -t从-ss时间开始转换（如-ss 00:00:01.00 -t 00:00:10.00即从00:00:01.00开始到00:00:11.00）。 -title——设置标题。 -timestamp——设置时间戳。 -vsync——增减Frame使影音同步。 视频参数 -b:v——设置视频流量，默认为200Kbit/秒。（单位请引用下方注意事项） -r——设置帧率值，默认为25。 -s——设置画面的宽与高。 -aspect——设置画面的比例。 -vn——不处理视频，于仅针对声音做处理时使用。 -vcodec( -c:v )——设置视频视频编解码器，未设置时则使用与输入文件相同之编解码器。 声音参数 -b:a——设置每Channel（最近的SVN版为所有Channel的总合）的流量。（单位请引用下方注意事项） -ar——设置采样率。 -ac——设置声音的Channel数。 -acodec ( -c:a ) ——设置声音编解码器，未设置时与视频相同，使用与输入文件相同之编解码器。 -an——不处理声音，于仅针对视频做处理时使用。 -vol——设置音量大小，256为标准音量。（要设置成两倍音量时则输入512，依此类推。） ##例子
不过在使用中可能需要用一些不常用的命令行去做一些视频编辑的功能，如下几个例子：
裁剪视频 比如有一个横向视频,分辨率是1280X720，如果指向保留中间的405*720部分，可以使用下面的命令：
ffmpeg -i input.mp4 -strict -2 -vf crop=405:720:420:0 video_out.mp4 其中的crop=405:720:420:0 裁剪参数，具体含义是：crop=width:height:x:y.其中 width和height便是裁剪后的尺寸，x:y 表示裁剪区域的左上角坐标。
视频转换成图片 ffmpeg -i input.mp4 image%3d.png 也可以指定视频导出的图片的帧率，（1s的视频生成的图片的个数）
ffmpeg -i input.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://cp0000.github.io/2017/07/02/kangrinboqe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cp0000.github.io/2017/07/02/kangrinboqe/</guid>
      <description>title: 冈仁波齐 date: 2017-07-02 15:08:30 author: cp categories: Movie tags: 去看了电影《冈仁波齐》，一开始倒不是因为想了解这部电影所宣扬的藏族信仰是为何物，而是因为朴树的片尾曲《No Fear In My Heart》。想来从高一的时候接触到朴树，从听《Colorful Days》，《傲慢的上校》，《生如夏花》，到现在已然13年了。令人兴奋的是，朴树这两年回来了。
很难讲《冈仁波齐》一部好看的电影，她是一部很特别的电影，看完电影我会觉得还是很值得一看。整个电影给我最大的冲击瞬间是他们从村里出发朝圣去冈仁波齐的时候。看到影片中出现了拖拉机，我以为他们会坐着拖拉机一路开过去。但又觉得坐拖拉机不能算朝圣吧，那怎不能走着过去吧，那么远，而且在高原上，得走多久才能到。所以当他们卧倒开始磕头前行的时候，我被震住了，说不出话来。是啊，在这个出行飞机高铁，挣钱越快越好，什么都讲究利益的年代，你看到一行人，一路从家乡磕头2000多里去圣地，很难不被这种行为所震动。
大多数国人是无宗教信仰者，当然我也是。我不懂宗教，更不懂藏传佛教，可能我还是个没有信仰的人。电影中可以明显感受到宗教给藏民带来的影响，一个最直接的感受是，他们都好平静，好平静。朝圣路上，大家生活在一起，无论晴天雪天，每天磕头朝拜，孕妇生完小孩后，回到队伍继续朝圣之路；老人去世了，举行完葬礼，大家继续朝圣。好像没有什么事情能阻止他们，就好像没什么事情能打破他们的平静。孩子出生的喜悦，老人去世的悲伤，都很平静，没有我们红白喜事的那种热闹，嘈杂，笑声朗朗或哀嚎震天。
坦率的说，我不觉得他们的生活方式就是好的，但我很羡慕他们表现出来的那种平静和笃定，那种生活在现代社会的人，很难拥有的不慌不忙。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://cp0000.github.io/2017/08/06/shoe-dog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cp0000.github.io/2017/08/06/shoe-dog/</guid>
      <description>title: 读书笔记：《鞋狗》 date: 2017-08-06 19:24:18 categories: Reading notes tags: 人生不一定会赢，而我就是不想输。 &amp;ndash;菲尔·奈特
11-12赛季的英超，阿森纳客场对阵切尔西。范佩西在比赛中上演帽子戏法，帮助阿森纳5-3赢得比赛。那是个阳光明媚的秋日午后，破门之后，范佩西在斯坦福球场上振臂高呼，一时间场外球迷高呼其名，为其呐喊助威，就像欢呼得胜回朝的将军一般。那一刻，我想这是足球这项运动带给职业球员最大的吸引力吧，或许也是竞技体育带给运动员们最大的吸引力。以前我觉得可能就是我一个人这么幻想过，成为一个杰出的运动员，在赢得比赛的那个刹那，场下的千万观众为你欢呼呐喊；直到最近看了NIKE的创始人菲尔·奈特的亲笔自传《Shoe Dog: A Memoir by the Creator of Nike》，在书中的前几章我找到了一直以来关于运动内涵的最好描述。
以下是两段摘录：
球在半空时，双方拳击手感觉到一个回合结束的铃声即将敲响时，或是跑者靠近终点，观众集体站起来时，那些事情就处于某个我们所不清楚的地方。在决定胜负前最激动人心的半秒内，显然会产生一种愉悦感。我想要的就是那个，无论到底是什么，我就想让那种感觉充实我的人生，填满我每天的生活。
运动可以让人们感受不同的生活，参与到别人的胜利中去，甚至体验失败。运动达到高潮的时候，粉丝的精神与运动员的精神融合在一起，这种情感的集合和转移，神秘主义者称其为合一
对于体育的热爱是菲尔·奈特选择去销售运动鞋的初衷，自传中讲述了NIKE是如何一步一步从无到有，并最终上市的；从最开始代理日本鬼冢虎鞋子往美国销售，到研发NIKE鞋子，并打败当时的霸主Adidas。作者在书中没有对自己成功进行任何粉饰，而是把大量篇幅拿来讲述自己如何和银行家较量，和债主周旋，和供应商协调，以及和政府部门官僚的斗争。作者真实记录了一个企业的成长过程，像众人坦诚公司最初的发展是非常混乱，危险，没有章法的。每一天都挣扎在破产的边缘（现金流就是零售业的生死线）。作为公司的创始人，菲尔·奈特早期没有在商业上指导江山，没有各种方法论，他每天都在遇到各种各样的挑战，而他能做的就是坚持下去；当然光坚持也没用，作为创始人，奈特要做的且唯一能做的就是想尽一切办法去解决问题。过程你会发现，企业不是一个人能做起来的，奈特需要找来各种各样的人，组合起来一个战斗力十足的创始团队。团队中有人擅长开疆拓土，打开新的市场；有人擅长研发新的鞋子，树立技术堡垒；有人擅长和政府部门打交道，搞定华盛顿那帮家伙。总之一个好汉三个帮，要想做成一个企业，没有得力的帮手是不可能的。勇敢，敏锐，合作，极大的耐力，以及全身心的投入是我读完该书对菲尔·奈特的性格理解。
书的最后一章，是奈特关于企业，以及自己生活的一些感性描写和反思。
我想告诉大家要按下暂停键，花时间努力思考一下要如何度过一生，想要和谁一起度过剩余的40年。我会告诉20岁左右的青年不要为了一份工作，专业甚至职业而安定下来，一定要寻求内心的冲动。即使你不知道其中的含义，也要坚持追寻。如果你追随自己内心的冲动，将会更能忍受疲惫，每一次失望都会成为你的动力，需要攀登的高峰也会变得微不足道起来。
你会发现这段话和乔布斯那段著名的斯坦福大学的毕业演讲和其相似：
The only way to do great work is to love what you do. If you haven&amp;rsquo;t found it yet, keep looking.
追随内心的冲动是两位伟大企业家的共性所在。
以上！</description>
    </item>
    
    <item>
      <title></title>
      <link>https://cp0000.github.io/2017/10/04/opengl-lighting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cp0000.github.io/2017/10/04/opengl-lighting/</guid>
      <description>title: Learning OpenGL：光照 date: 2017-10-04 17:39:47 tags: 颜色 计算机如何表达现实世界中五彩滨纷的颜色？答案是用红，绿，蓝（缩写RGB）三个分量来数字化颜色。但我们在现实生活中看到某一物体的颜色并不是这个物体真正拥有的颜色，而是它反射的（Reflected）颜色。也就是说，那些不能被物体所吸收的颜色就是我们能够感知到的物体颜色。例如，太阳光能被看见的白光其实是由许多不同的颜色组合而成的。如果我们将白光照在一个红色的衣服上，这个红色的衣服会吸收白光中除了红色以外的所有子颜色，而不被吸收的红色光被反射到我们的眼中，让这件衣服看起来是红色的。
颜色反射的定律被直接运用到图形领域。当我们在OpenGL中创建一个光源时，我们希望给光源一个颜色。当我们把光源的颜色与物体的颜色值相乘，所得到的就是这个物体所反射的颜色。在OpenGL中，我们将两个颜色向量作分量相乘，结果就是最终的颜色向量了：
vec3 lightColor(1.0,1.0,1.0); vec3 clothingColor(0.0,0.5,0.0); vec3 result = lightColor * clothingColor; // (0.0, 0.5, 0.0); 我们定义物体的颜色为物体从一个光源反射各个颜色分量的大小.我们可以使用不同的光源颜色来让物体显现出意想不到的颜色。
##基础光照
现实世界的光照极其复杂，而且受诸多因素影响，计算机有限的计算能力无法模拟。因此在OpenGL的光照使用的是简化的模型，对现实的情况进行近似模拟。这些光照模型是基于我们对光的物理特性的理解。冯氏光照模型是其中一个模型，冯氏光照模型主要由3个分量组成：环境（Ambient），漫反射（Diffuse）和镜面（Specular）光照。如下图：
环境光照（Ambient Lighting）:在黑暗的情况下，现实世界通常也仍有一些光亮，所以物体几乎永远不会是完全黑暗的。为了模拟这个，我们会使用一个环境光照常量，它永远会给物体一些颜色。 漫反射光照（Diffuse Lighting）：模拟光源对物体的方向性影响。它是冯氏光照模型中视觉上最显著的分量。物体的莫一部分越是正对着光源，它就会越亮。 镜面光照（Specular Lighting）：模拟有光泽物体上面出现的亮点。镜面光照的颜色相比于物体的颜色会更倾向于光的颜色。 环境光照 我们使用一个很小的常量（光照）颜色，添加到物体片段的最终颜色中，如此即使场景中没有直接的光源也能看起来存在有些发散的光。
void main() { float ambientStrength = 0.1; vec3 ambient = ambientStrength * lightColor; vec3 result = ambient * objectColor; gl_fragColor = vec4(result, 1.0); } 漫反射光照 漫反射对物体产生显著的视觉影响。漫反射光照使物体上与光线方向越接近的片段能从光源处获得更多的亮度。
光源发出的光线落在物体的一个片段上，我们需要计算这个光线是以什么角度接触到这个片段的。为了测量光线和片段的角度，需用到一个叫做法向量（Normal Vector）的东西，它是垂直于片段表面的一个向量。点乘返回一个标量，我们可以用它计算光线对片段颜色的影响。不同片段朝向光源的方向不同，这些片段被照亮的情况也不同。所以，计算漫反射光照需要：
法向量：一个垂直于顶点表面的向量 定向的光线：作为光源的位置与片段的位置之间向量差的方向向量。 法向量 法向量是一个垂直于顶点表面的（单位）向量。由于顶点本身并没有表面，我们利用它周围的顶点来计算出这个顶点的表面。一个三角形的法线是一个长度为1并且垂直于这个三角形的向量。而顶点的法线，是包含该顶点的所有三角形的法线均值。
###漫反射光照 每个顶点有了法向量，但我们仍然需要光源额度位置向量和片段的位置向量。由于光源的位置是一个静态变量，故简单在片段着色器中声明为uniform：
uniform vec3 lightPos; 渲染的时候，设置lightPos就可以了。 最后，我们还需要片段的位置。我们会在世界空间中进行所有的光照计算，因此我们需要一个在世界空间中的顶点位置。我们可以通过把顶点位置属性乘以模型矩阵来把它变换到世界坐标系。如下：</description>
    </item>
    
  </channel>
</rss>
